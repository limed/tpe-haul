{{if exists "/config/TraefikConfigVersion" }}
# This is configuration version {{ getv "/config/TraefikConfigVersion" }}
{{end}}

defaultEntryPoints = ["http","https"]
checkNewVersion = false

{{ $debug := ( getv "/config/Debug" "false" ) }}
{{ if ne $debug "false" }}
logLevel = "DEBUG"
acmeLogging = true
{{ else }}
logLevel = "INFO"
acmeLogging = false
{{ end }}

MaxIdleConnsPerHost = 1000

[traefiklog]
  filepath = "/var/log/traefik_error.log"
  format   = "json"

[accessLog]
  filePath = "/var/log/traefik.log"
  format = "json"

[entryPoints]
  [entryPoints.traefik]
    address = ":9109"
  [entryPoints.http]
    address = ":80"
    [entryPoints.http.proxyProtocol]
      trustedIPs = ["127.0.0.1/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    [entryPoints.http.redirect]
      entryPoint = "https"
  [entryPoints.https]
    address = ":443"
    [entryPoints.https.tls]
      MinVersion = "VersionTLS12"
    [entryPoints.https.proxyProtocol]
      trustedIPs = ["127.0.0.1/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    [entryPoints.https.forwardedHeaders]
      trustedIPs = ["127.0.0.1/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]

{{ if exists "/config/Key" -}}
{{ if exists "/config/Cert" -}}
      [[entryPoints.https.tls.certificates]]
      CertFile = "/etc/traefik/site.cert"
      KeyFile = "/etc/traefik/site.key"
{{end}}{{end}}

[ping]
[api]
  [api.statistics]
[metrics]
  [metrics.prometheus]

[consul]
endpoint = "127.0.0.1:8500"
watch = true
prefix = "{{ getv "/config/ServiceName" }}/{{ getv "/config/EnvironmentName" }}/config"

# Use HTTP-01 challenges
[acme.httpChallenge]
  entryPoint = "http"

[acme]
# Handle when this isn't set
email="{{ getv "/config/Email/Destination" }}"
storage = "{{ getv "/config/ServiceName" }}/{{ getv "/config/EnvironmentName" }}/acme"
entryPoint = "https"

# Doesn't fallback to https:// checks, bummer
#dnsProvider = "route53"

# Only set CA server in stage where this consul key exists
{{if exists "/config/LetsEncrypt/CAServer" }}
caServer = "{{ getv "/config/LetsEncrypt/CAServer" }}"
{{end}}

acmeLogging = true
onDemand = false
onHostRule = false

[file]

[backends]
  [backends.backend1]
    [backends.backend1.servers.server1]
    # Send to Varnish
    url = "http://127.0.0.1:82"

[frontends]
  [frontends.frontend1]
  backend = "backend1"
  passHostHeader = true
  entryPoints = [ "http", "https" ]

# Static Sites
{{ $env:=getv "/config/EnvironmentName" }}
{{ if eq $env "prod" }}

[[acme.domains]]
main = "tpe.mozilla.org"
sans = [
    "www.tpe.mozilla.org"
]

{{ else }}

[[acme.domains]]
main = "tpe.allizom.org"
sans = [
    "www.tpe.allizom.org"
]

{{ end }}
